/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2018-12-25 08:23
* Filename      : A.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
const int maxn = 110;
typedef long long ll;
const double PI = acos(-1.0);
const double eps = 1e-8;
const int INF = 0x3f3f3f3f;

int mat[maxn][maxn];
int sol[maxn];
bool freesol[maxn];

inline int gcd(int a, int b){
    return b ? gcd(b, a % b) : a;
}

inline int lcm(int a, int b){
    return a / gcd(a, b) * b;
}

inline void gauss(int equ, int var){
    for(int i(0); i<=var; ++i){
        sol[i] = 0;
        freesol[i] = true;
    }
    int c = 0;
    int r = 0;
    int max_r = 0;
    for(; r<equ && c<var; ++r, ++c){
        max_r = r;
        for(int i(r+1); i<equ; ++i)
            if(abs(mat[max_r][c]) < abs(mat[i][c]))
                max_r = i;
        if(max_r != r)
            for(int j(r); j<var+1; ++j)
                swap(mat[r][j], mat[max_r][j]);
        if(mat[r][c] == 0){
            r--;
            continue;
        }
        for(int i(r+1); i<equ; ++i)
            if(mat[i][c] != 0)
                for(int j(c); j<var+1; ++j)
                    mat[i][j] ^= mat[r][j];
    }
    for(int i(var-1); i >= 0; --i){
        sol[i] = mat[i][var];
        for(int j(i+1); j<var; ++j)
            sol[i] ^= (mat[i][j] && sol[j]);
    }
}

int main(){
    int n = 0;
    int num = 1;
    scanf("%d", &n);
    while(n--){
        memset(mat, 0, sizeof(mat));
        for(int i(0); i<30; ++i)
            scanf("%d", &mat[i][30]);
        for(int i(0); i<5; ++i)
            for(int j(0); j<6; ++j){
                int t = i*6+j;
                mat[t][t] = 1;
                if(i>0)
                    mat[(i-1)*6+j][t] = 1;
                if(i<4)
                    mat[(i+1)*6+j][t] = 1;
                if(j>0)
                    mat[i*6+j-1][t] = 1;
                if(j<5)
                    mat[i*6+j+1][t] = 1;
            }
        gauss(30, 30);
        printf("PUZZLE #%d\n", num++);
        for(int i(0); i<30; ++i){
            printf("%d", sol[i]);
            if((i+1) % 6 == 0)
                printf("\n");
            else
                printf(" ");
        }
    }
    return 0;
}
